version: "3.2"
services:
  database:
    container_name: database
    image: mariadb
    volumes:
      - "/etc/timezone/:/etc/timezone:ro" #ubuntu timezone기준으로 설정
      - type: volume
        source: initdb-volume
        target: /docker-entrypoint-initdb.d
      - type: volume
        source: confd-volume
        target: /etc/mysql/conf.d
      - type: volume
        source: data-volume
        target: /var/lib/mysql
    environment:
      - MYSQL_DATABASE_1=campinity
      - MYSQL_DATABASE_2=batch
      - MYSQL_ROOT_PASSWORD=ssafy1308!
    command: ['--character-set-server=utf8mb4',
              '--collation-server=utf8mb4_unicode_ci']
    ports:
      - 3306:3306
    restart: unless-stopped
    networks:
      default_bridge:
        ipv4_address: 172.33.0.10

  application:
    build: ./demo-api-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://database:3306/campinity?useUnicode=true
      SPRING_DATASOURCE_USERNAME: server  #local환경에서는 root로 변경
      SPRING_DATASOURCE_PASSWORD: ssafy123!
      TZ: "Asia/Seoul"
    ports:
      - 8003:8003
    links:
      - mongo
    depends_on:
      - database
      - mongo
    volumes:
      - upload-images:/var/lib/images
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "100m"
    networks:
      default_bridge:
        ipv4_address: 172.33.0.11
  batch-server:
    build: ./demo-batch-server
    environment:
      SPRING_BATCH_DB_DATASOURCE_URL: jdbc:mariadb://database:3306/batch?useUnicode=true
      SPRING_BATCH_DB_DATASOURCE_USERNAME: server #local환경에서는 root로 변경
      SPRING_BATCH_DB_DATASOURCE_PASSWORD: ssafy123!
      SPRING_CAMPINITY_DB_DATASOURCE_URL: jdbc:mariadb://database:3306/campinity?useUnicode=true
      SPRING_CAMPINITY_DB_DATASOURCE_USERNAME: server #local환경에서는 root로 변경
      SPRING_CAMPINITY_DATASOURCE_PASSWORD: ssafy123!
      TZ: "Asia/Seoul"
    ports:
      - 8002:8002
    depends_on:
      - database
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "100m"
    networks:
      default_bridge:
        ipv4_address: 172.33.0.12

  redis:
    image: redis:alpine
    command: redis-server --requirepass campinity1308! --port 6379
    container_name: redis_boot
    hostname: redis_boot
    labels:
      - "name=redis"
      - "mode=standalone"
    environment:
      TZ: "Asia/Seoul"
      REDIS_PASSWORD: campinity1308!
    ports:
      - 6379:6379
    volumes:
      - type: bind
        source: ./redis.conf
        target: /usr/local/etc/redis/redis.conf
      - type: volume
        source: redis-data
        target: /data
    networks:
      default_bridge:
        ipv4_address: 172.33.0.13

  mongo:
    image: "mongo:4.4.3"
    container_name: mongo
    hostname: mongo
    networks:
      default_bridge:
        ipv4_address: 172.33.0.14
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root # campinity1308! #local 도커환경에서는 root로 설정하세요.
    restart: always
    ports:
      - 27017:27017
    command: [ "--bind_ip", "0.0.0.0" ]
    volumes:
      - type: volume
        source: mongo-data
        target: /data/db

volumes:
  upload-images:
  initdb-volume:
  confd-volume:
  data-volume:
  redis-data:
  mongo-data:
networks:
  default_bridge:
    ipam:
      driver: default
      config:
        - subnet: 172.33.0.0/16